init {
    a1, b1, x, y : Float
    variable1,c,e,g,r,z,f : Int
    p1, p2, p3 : String
    variable2 : Int
    a2, b3,b : Float
}

*- Prueba expresion -*

c:= ((e-21*10)/4) * 67

*- c:= ((e-21*10)/4) * 67; -* *-Ejemplo error sintactico con un char que no se espera (;)-*


*- Asignaciones -*

variable1 := 27 - c
variable2 := r + 500
variable2 := 34 * 3
variable1 := z / f

a1 := 99999.99
b1 := 99.
b3 := .9999


*- b76 := "@sdADaSjfla%daaaaaaaaaaaaaaaaaaaaaaaaaaaaaafg"-* *- -> Caso error maxima cant de car string-*
*- a45645 := 965535 -*    *-  -> Caso error rango int -*
*- a123456 := 34354444444454353454354354.53454354344444444444444444444444445444 -* *-  -> Caso error rango float -*

p1 := "asldk"
p2 := "@sdaaaaafafg"

*-init {-*
*-    a1, b1 : Float-*
*-}-*

*- Ejemplo con un tipo de dato que no esta definido -*
*-init { -*
*-    a1, b1 : FLOTANTE -*
*- } -*

mientras ( a1>b1 OR b3 == b1)
{
    escribir("a es mas grande que b")
    variable1 := variable1 + 1
}

si (NOT a == b)
{
    escribir("a es mas grande que b")
    variable1 := variable1 + 1
}

si  (a > b AND b>g)
{
    escribir("a es mas grande que b")
    variable1 := variable1 + 1
}
sino
{
    variable1 := 6
}

leer(base) *- base es una variable -*

escribir("ewr")  *- “ewr” es una cte string -*
escribir(var1)  *- var1 es una variable numerica definida previamente -*

x = sumaLosUltimos(4; [28, 13.5, 4, 5.5, 17, 52])
x = sumaLosUltimos(0; [28, 13.5, 4, 5.5, 17, 52])
x = sumaLosUltimos(4; [28, 52])

y = triangulo(x, 1+1, x)  
y = triangulo(0, 1/x, 0) 
y = triangulo((32+5+x)*z, 1/x, 100) 

a:= 1